"use client";

import Image from 'next/image';
import Link from 'next/link';
import { Activity } from "@/lib/store/useActivitiesStore";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Calendar, Heart, MapPin, Star } from "lucide-react";
import { Button } from "@/components/ui/button";

interface ActivityCardProps {
  activity: Activity;
}

export function ActivityCard({ activity }: ActivityCardProps) {
  function formatDateShort(dateString: string | number | Date) {
    const date = new Date(dateString);
    return date.toLocaleDateString("en-US", {
      month: "short",
      day: "numeric",
      year: "numeric",
    });
  }

  return (
    <Link href={`/activities/${activity.id}`} className="">
      <Card className="overflow-hidden hover:shadow-lg transition-shadow group h-full">
        <div className="relative xxl:h-64 h-52 w-full">
          <Image
            src={activity.mediaUrls[0] || "/default.png"}
            alt={activity.title}
            fill
            className="object-cover transition-transform group-hover:scale-105"
          />
          <Badge className="absolute top-4 left-4 bg-white text-gray-900 hover:text-white">
            {activity.activityType.name}
          </Badge>
          <Button
            variant="ghost"
            size="sm"
            className="absolute top-4 right-4 text-white hover:scale-110 transition-transform"
          >
            <Heart className="h-5 w-5" />
          </Button>
        </div>
        <CardContent className="p-6">
          <div className="flex items-center text-sm text-gray-600 mb-2">
            <MapPin className="h-4 w-4 mr-1" />
            {activity.city.name}, {activity.country.name}
          </div>
          <h3 className="text-xl font-semibold mb-2">{activity.title}</h3>
          <p className="text-gray-600 text-sm mb-3 line-clamp-2">
            {activity.description}
          </p>

          <div className="flex items-center space-x-4 mb-4 text-sm">
            <svg
              className="mr-1.5 h-5 w-5 flex-shrink-0 text-gray-800"
              viewBox="0 0 20 20"
              fill="currentColor"
              aria-hidden="true"
            >
              <path
                fillRule="evenodd"
                d="M10 2a8 8 0 100 16 8 8 0 000-16zM8 14a.75.75 0 01.75-.75h2.5a.75.75 0 010 1.5h-2.5A.75.75 0 018 14zm0-4a.75.75 0 01.75-.75h2.5a.75.75 0 010 1.5h-2.5A.75.75 0 018 10zm0-4a.75.75 0 01.75-.75h2.5a.75.75 0 010 1.5h-2.5A.75.75 0 018 6z"
                clipRule="evenodd"
              />
            </svg>{" "}
            From {formatDateShort(activity.startDate)} - {formatDateShort(activity.endDate)}
          </div>
          <div className="flex items-center space-x-4 mb-4">
            <div className="flex items-center">
              <Star className="h-4 w-4 text-yellow-400 fill-current" />
              <span className="ml-1 text-sm font-medium">
                {activity.averageRating}
              </span>
              <span className="ml-1 text-sm text-gray-600">
                ({activity.totalReviews})
              </span>
            </div>
            <div className="flex items-center text-sm text-gray-600">
              <Calendar className="h-4 w-4 mr-1" />
              {activity.durationMinutes >= 60 ? (
                <>
                  {Math.floor(activity.durationMinutes / 60)}
                  {Math.floor(activity.durationMinutes / 60) === 1 ? " hour" : " hours"}
                  {activity.durationMinutes % 60 > 0 && (
                    <> {activity.durationMinutes % 60} {activity.durationMinutes % 60 === 1 ? "minute" : "minutes"}</>
                  )}
                </>
              ) : (
                `${activity.durationMinutes} ${activity.durationMinutes === 1 ? "minute" : "minutes"}`
              )}
            </div>
          </div>
          <div className="flex justify-between items-center">
            <div>
              <div className="text-2xl font-bold text-primary">
                ${activity.price}
                <span className="text-sm font-normal text-gray-600">/person</span>
              </div>
              <div className="text-sm text-gray-600">by {activity.hostName}</div>
            </div>
            <Link href={`/activities/${activity.id}`}>
              <Button>View Details</Button>
            </Link>
          </div>
        </CardContent>
      </Card>
    </Link>
  );
}
