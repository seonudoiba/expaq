# Application Configuration
spring.application.name=expaq
server.port=${SERVER_PORT:8081}

# Security Configuration
spring.security.user.name=${SPRING_SECURITY_USER_NAME}
spring.security.user.password=${SPRING_SECURITY_USER_PASSWORD}

# PostgreSQL Database Configuration
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true
spring.servlet.multipart.location=/tmp

# Jackson Configuration
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.serialization.fail-on-self-references=false
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.default-property-inclusion=non_null

# JWT Configuration
app.jwt.secret=${APP_JWT_SECRET}
app.jwt.expiration=${APP_JWT_EXPIRATION}
app.jwt.expiration-in-ms=${APP_JWT_EXPIRATION_IN_MS}

# Cloudinary Configuration
cloudinary.cloud.name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api.key=${CLOUDINARY_API_KEY}
cloudinary.api.secret=${CLOUDINARY_API_SECRET}

# SMTP Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.github.client-name=GitHub
spring.security.oauth2.client.registration.github.scope=read:user, user:email

# Application URLs and Paths
app.base-url=${APP_BASE_URL:http://localhost:8081}
app.email.logo-path=classpath:/static/images/expaqlogo.png

# Spring Boot Configuration
spring.main.allow-circular-references=true

# Payment Provider Configuration
stripe.api.key=${STRIPE_API_KEY}
paystack.secret.key=${PAYSTACK_API_KEY}

# Payment Configuration
payment.default.currency=USD
payment.webhook.secret=${STRIPE_WEBHOOK_SECRET_KEY}

# Paystack Configuration
paystack.secret-key=${PAYSTACK_SECRET_KEY}
paystack.public-key=${PAYSTACK_PUBLIC_KEY}
paystack.base-url=https://api.paystack.co
paystack.callback-url=${frontend.base-url}/payments/verify
paystack.webhook-url=${APP_BASE_URL}/api/payments/paystack/webhook

# Exchange Rate API Configuration
exchange.api.url=https://api.exchangerate-api.com/v4/latest/USD
exchange.api.key=${EXCHANGE_API_KEY:}
frontend.base-url=https://expaq-tour.vercel.app

# Performance Optimization
spring.main.lazy-initialization=true

# Database Connection Pool (HikariCP) Optimization
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1200000

# JPA/Hibernate Performance Tuning
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.jdbc.fetch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.batch_versioned_data=true
spring.jpa.properties.hibernate.query.in_clause_parameter_padding=true
spring.jpa.properties.hibernate.query.fail_on_pagination_over_collection_fetch=true
spring.jpa.properties.hibernate.query.plan_cache_max_size=2048
spring.jpa.properties.hibernate.default_batch_fetch_size=100
spring.jpa.properties.hibernate.session.events.log.LOG_QUERIES_SLOWER_THAN_MS=25

# Response Compression
server.compression.enabled=true
server.compression.min-response-size=1024
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css

# Tomcat Server Optimization
server.tomcat.max-threads=200
server.tomcat.min-spare-threads=10
server.tomcat.max-connections=10000
server.tomcat.accept-count=100
server.tomcat.connection-timeout=5000

# Cache Configuration
spring.cache.type=caffeine
spring.cache.cache-names=users,tours,bookings,payments
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=3600s

# Actuator Configuration
management.endpoints.web.exposure.include=health,metrics,prometheus,caches,mappings
management.endpoint.health.show-details=when_authorized
management.metrics.tags.application=${spring.application.name}
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.enable.jvm=true
#management.metrics.export.prometheus.enabled=true
